<?php
/**
 * File PentesterInterface.php
 *
 * PHP Version 5.6
 *
 * @category  Class
 * @package   AppBundle\Utils\Pentester
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */

namespace AppBundle\Utils\Pentester;

use AppBundle\Utils\Target\TargetInterface;
use Guzzle\Http\Client;

/**
 * All Pentesting suites should implement this interface.
 * Two main functions and one composite function:
 *  - do the test
 *  - get the report
 *  - do both
 * Interface PentesterInterface
 * @category  Interface
 * @package AppBundle\Utils\Pentester
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */
interface PentesterInterface
{
    /**
     * Do the full pentest and return a report
     * @param TargetInterface $target
     * @return \AppBundle\Utils\Reporter\Report
     */
    public function testAndGetReport(TargetInterface $target);

    /**
     * Just do the test and store the report
     * @param TargetInterface $target
     */
    public function test(TargetInterface $target);

    /**
     * Just return the report
     * @return \AppBundle\Utils\Reporter\Report
     */
    public function getReport();

    /**
     * For testing purposes, we need to overwrite the Guzzle client.
     * Since all code should be tested, this is forced to be implemented
     * @param Client $guzzle
     * @return void
     */
    public function guzzleOverwrite(Client $guzzle);
}
