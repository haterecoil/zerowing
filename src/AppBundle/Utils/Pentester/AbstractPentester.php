<?php
/**
 * File AbstractPentester.php
 *
 * PHP Version 5.6
 *
 * @category  Class
 * @package   Zerowing
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */

namespace AppBundle\Utils\Pentester;

use AppBundle\Utils\Reporter\Reporter;
use AppBundle\Utils\Target\TargetInterface;
use Guzzle\Http\Client;
use Misd\GuzzleBundle\MisdGuzzleBundle;

/**
 * Class AbstractPentester
 * @category  Class
 * @package AppBundle\Utils\Pentester
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */
abstract class AbstractPentester implements PentesterInterface
{
    /**
     * Create and store reports of actions
     * @var  Reporter
     */
    protected $_reporter;

    /**
     * A Guzzle client to do HTTP Requests
     * @var \Guzzle\Service\Client
     */
    protected $_guzzle;

    /**
     * Automatically setting up a Reporter
     * AbstractPentester constructor.
     *
     * @param MisdGuzzleBundle $guzzle A guzzle client
     */
    public function __construct($guzzle)
    {
        $this->_guzzle = $guzzle;
    }

    /**
     * @inheritdoc
     */
    public function testAndGetReport(TargetInterface $target)
    {
        $this->test($target);

        return $this->getReport();
    }

    /**
     * @inheritdoc
     */
    abstract public function test(TargetInterface $target);

    /**
     * Return the full report
     * @return \AppBundle\Utils\Reporter\Report[]
     */
    public function getReport()
    {
        return $this->_reporter->getReports();
    }

    /**
     * @inheritdoc
     */
    public function guzzleOverwrite(Client $guzzle)
    {
        $this->_guzzle = $guzzle;
    }

    /**
     * Logs an action of the Pentester
     * @param string $msg This is the message to you hou hou
     * @return void
     */
    protected function report($msg)
    {
        $this->_reporter->report($msg);
    }

}