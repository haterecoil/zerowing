<?php
/**
 * File AbstractPentesterTest.php
 *
 * PHP Version 5.6
 *
 * @category  Class
 * @package   zerowing
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */

namespace AppBundle\Tests\Controller;


use Guzzle\Http\Client;
use Guzzle\Plugin\Cookie\CookieJar\ArrayCookieJar;
use Guzzle\Plugin\Cookie\CookiePlugin;

abstract class AbstractPentesterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * DVWA's url.
     * todo set in a config file
     * @var string
     */
    private $DVWA_URL = "http://localhost/hack/";

    /**
     * the regex to find the csrf token in login.php
     * @var string
     */
    private $USER_TOKEN_REGEX = "/name='user_token' value='([a-f0-9]{32})/";

    /**
     * @var Client
     */
    private $_dvwa_guzzle = null;

    /**
     * Inject Guzzle in this test class
     * And set up the given client for use on
     * Damn Vulnerable Web Application... A vulnerable application
     * without API...
     * Difficulty resided in finding the way of using
     * cookies and correct documentation for all methods.
     */
    public function __construct()
    {
        parent::__construct();

        //prepare a cookie jar
        $jar = new ArrayCookieJar();
        $cookiePlugin = new CookiePlugin($jar);

        //get a guzzle instance
        $this->_dvwa_guzzle = new Client();
        $this->_dvwa_guzzle->setBaseUrl($this->DVWA_URL);
        $this->_dvwa_guzzle->setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36");
        $this->_dvwa_guzzle->addSubscriber($cookiePlugin);

        //first request/response exchange to get CSRF token
        $request = $this->_dvwa_guzzle->get('login.php', null, ["allow_redirects" => false]);
        $response = $request->send();

        $str = $response->getBody();
        preg_match($this->USER_TOKEN_REGEX, $str, $matches);
        $user_token = $matches[1];

        //second exchange to login
        $request = $this->_dvwa_guzzle->createRequest(
            'POST',
            'login.php',
            null,
            [
                'username' => 'admin',
                'password' => 'password',
                'Login' => 'Login',
                'user_token' => $user_token,
            ],
            [
                "allow_redirects" => true,
            ]
        );

        $request->send();
    }

    /**
     * @return Client
     */
    public function getDvwaGuzzle()
    {
        return $this->_dvwa_guzzle;
    }

    /**
     * @param Client $dvwa_guzzle
     */
    public function setDvwaGuzzle($dvwa_guzzle)
    {
        $this->_dvwa_guzzle = $dvwa_guzzle;
    }

    /**
     * @return string
     */
    public function getUSERTOKENREGEX()
    {
        return $this->USER_TOKEN_REGEX;
    }

    /**
     * @return string
     */
    public function getDVWAURL()
    {
        return $this->DVWA_URL;
    }

}