<?php
/**
 * File PentestController.php
 *
 * PHP Version 5.6
 *
 * @category  Controller
 * @package   Zerowing
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */

namespace AppBundle\Controller;

use AppBundle\Utils\Pentester;
use AppBundle\Utils\Reporter;
use AppBundle\Utils\Target;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

/**
 * Class PentestController
 * @category  Class
 * @package   AppBundle\Controller
 * @author    mrgn <xyz@example.com>
 * @copyright 2016 mrgn
 * @license   MIT http://choosealicense.com/licenses/mit/
 * @link      http://lorem.ovh
 */
class PentestController extends Controller
{
    /** 
     * Stores all reports made by Pentesters
     * @var  Reporter\Report[] 
     */
    private $_log;

    /**
     * Leeroy Jenkins is the ultimate test
     * The full suite royal pentesting
     * @var Target\TargetInterface $target
     * @return Response
     *
     * @Route("/pentest")
     */
    public function leeroyJenkinsAction(Request $request)
    {

        $target = new Target\SqlTarget();
        $target->setUrl($request->get('url'));
        $target->setParameters($request->request->all());

        dump($request);

        /**
         * SQL pentesting service
         * todo put in priv var ?
         * @var $sqlPentester Pentester\SqlPentester
         */
        $sqlPentester = $this->get('app.pentester.sql');

//        $this->_log[] = $sqlPentester->testAndGetReport($target);

        return $this->render('@App/dump.html.twig');
    }

    /**
     * Pentesting SqlInjections â€˜only'
     *
     * @return Response
     *
     * @Route("/pentest/sql")
     */
    public function sqlAction(Request $request)
    {

        dump($request->request->all() );

        /**
         * SQL pentesting service
         * @var $sqlPentester Pentester\SqlPentester
         */
//        $sqlPentester = $this->get('app.pentester.sql');
//        $this->_log[] = $sqlPentester->testAndGetReport();

//        dump($qs);

        return $this->render('@App/dump.html.twig');
    }

    /**
     * @Route("/yolo")
     * @return Response
     */
    public function yoloAction(){
        //choper le repository
        $repository = $this->getDoctrine()->getRepository('AppBundle:SqlError');
        $repository->getSqlError();

        dump($repository);

        $repository->getSqlError(2);

        dump($repository);

        return $this->render('@App/dump.html.twig');
    }
}
